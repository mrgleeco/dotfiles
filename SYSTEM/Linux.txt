
VMware installation - host OS at least. 
using  vmware fusion 5
using ubuntu 12.04 server ISO


choose bridged networking; autodetect
196.168.2.129


# <as root>
addgroup cf adm
grouadd webusers
useradd -G webusers -m -p cf -u 1001 -s /bin/bash cf

sudo dpkg-reconfigure console-setup

sudo aptitude update    # refresh apt's cache
sudo aptitude upgrade   # run the upgrade
apt-get  install \
    openssh-server \
    aptitude \
    git-core \
    realpath \
    screen \
    tmux \
    xterm \
    whois \
    curl \ 
    lynx \ 
    vim \ 
    libanyevent-perl \ 
    libanyevent-http-perl \
    libjson-xs-perl \
    traceroute 


# additional user stuff
apt-get  install \
    silversearcher-ag

# begin kernel upgrade for docker
apt-get update && sudo apt-get install linux-image-generic-lts-raring
# <reboot>

shutdown -r now 

# addendum: after upgrading kernel, need to reinstall vmware-tools 
# step 1 is to get the new kernel headers
sudo apt-get install linux-headers-$(uname -r)
   tar zxvf VMwareTools-9.2.2-893683.tar.gz
   cd vmware-tools-distrib/
   ./vmware-install.pl


##########################
#### Docker subystem #####
##########################

# Add the PPA sources to your apt sources list.
sudo apt-get install python-software-properties && sudo add-apt-repository ppa:dotcloud/lxc-docker


# Update your sources
sudo apt-get update

# Install, you will see another warning that the package cannot be authenticated. Confirm install.
sudo apt-get install lxc-docker

# Verify it worked:
# download the base 'ubuntu' container and run bash inside it while setting up an interactive shell
docker run -i -t ubuntu /bin/bash

# type 'exit' to exit


## Fig subsystem

 sudo apt-get install python-pip
 sudo pip install -U fig

 # test it out




##########################
#### cf dev setup   #####
##########################
# now git clone  cf-setup
[as user cf] 

mkdir ~/code && cd ~/code && git clone https://github.com/mrgleeco/dotfiles.git
cd dotfiles && bash ./INSTALL.sh

   mkdir ~/{code,local}
   git clone https://github.com/mrgleeco/dotfiles.git code/dotfiles
   (cd ~/code/dotfiles && ./INSTALL )
   # cd ~/local && git clone cf-setup 
   (cd ~/local/cf-setup && ./auto/install_all.sh


#
##########################
#### JJ dev setup    #####
##########################

mkdir ~/opt/{depot,src}

sudo apt-get install \
    g++ \               # for node
    default-jre \       # for elasticsearch
    rake                # for hub
    libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make   \ # for nginx


# dropbox deb pkg: NOTE NOTE: this segfaults as of 2014-01, so nice to have
curl  -L -O https://www.dropbox.com/download?dl=packages/debian/dropbox_1.6.0_amd64.deb
sudo dkpg -i dropbox_1.6.0_amd64.deb

# for depot stuff (ie. working dir = ~/opt/src ):

  git clone https://github.com/github/hub.git
  rake install prefix=~/opt/depot/hub-1.11.1

  curl https://npmjs.org/install.sh > install_npm.sh
  npm_config_prefix=/home/jj/opt/depot/npm-1.1.71 sh install_npm.sh

  curl http://nodejs.org/dist/v0.10.24/node-v0.10.24.tar.gz -O
  ./configure --prefix=~/opt/depot/node-v0.10.24 2>&1 |tee d.conf
  make && make install





