

export SYS=`uname -s`;
#


#  load_common;

# export PS1='\[\e[0;31m\]$(dirs_depth)\[\e[0;32m\]\u$(extra_color)@\[\e[0;32m\]\h\[\e[0m\]\[\e[0;33m\]$(parse_git_branch)\[\e[0m\]:\w\$ '']]]]]]'
export PS1='[\u@\h:\w]$ '
export EDITOR=/usr/bin/vim
export PAGER=/usr/bin/less
export ACK_PAGER=/usr/bin/less
export ORG=planet

[ -f $HOME/AWS.config ] && export AWS_CONFIG_FILE=$HOME/AWS.config

# see $HOME/.aws/config for more here
# [ -f $HOME/AWS.config ] && export AWS_CONFIG_FILE=$HOME/AWS.config
# export AWS_DEFAULT_PROFILE=gleeco

# TODO - multiple accounts
[ -f $HOME/.github-api-token ] && export HOMEBREW_GITHUB_API_TOKEN=$(cat ~/.github-api-token)

# http://askubuntu.com/questions/80371/bash-history-handling-with-multiple-terminals
[ -d ~/.history ] || mkdir ~/.history
[ -d ~/.history ] && chmod 0700 ~/.history
HISTFILE=~/.history/history.$$
# close any old history file by zeroing HISTFILESIZE
HISTFILESIZE=0
# then set HISTFILESIZE to a large value
HISTFILESIZE=10000
HISTSIZE=1000
HISTTIMEFORMAT="[%F:%T] "


  #
case $SYS in
    Darwin)
        # TODO: xcode gcc at /usr/bin vs. /opt/usr/local/bin
        # adding $HOME stuff is later
        export PATH=/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/sbin:/usr/local/git/bin:/Developer/usr/bin
        [ -d /opt/bin ] && export PATH=$PATH:/opt/bin
        [ -d /opt/usr/local/bin ] && export PATH=$PATH:/opt/usr/local/bin
        # make system perl aware of local perlbrew  setup
        [ -d ~/local/bin ] && export PATH=$PATH:~/local/bin
        [ -d ~/bin ] && export PATH=$PATH:~/bin
        [ -d ~/perl5/lib/perl5 ] && cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
        # [ -d /usr/local/go ] && export GOROOT=/usr/local/go
        [ -d /usr/local/opt/go ] && export GOROOT=/usr/local/opt/go/libexec/bin
        [ -f ~/perl5/perlbrew/etc/bashrc ] && source ~/perl5/perlbrew/etc/bashrc
        [ -d /usr/local/lib/node_modules ] && export NODE_PATH=/usr/local/lib/node_modules
        ;;
    Linux)
        export PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:~/bin
        [ -d $HOME/local/go ] && export GOROOT=$HOME/local/go
      ;;
esac;

# to use an opt-depot setup:
# export BASE=/ape
[ -d ~/opt/depot ] && export BASE=~/opt

if [ $BASE ]; then
     export DEPOT=$BASE/depot
     export PATH=$BASE/bin:$PATH
     export MANPATH=$BASE/man:/usr/share/man:/usr/local/man
     export LD_LIBRARY_PATH=$BASE/lib:/lib:/usr/lib:/usr/local/lib
     export LD_RUN_PATH=$BASE/lib:/lib:/usr/lib:/usr/local/lib
     export PERLLIB=$BASE/lib
     [ -d $BASE/lib/node_modules ] && export NODE_PATH=$NODE_PATH:/usr/local/node_modules
fi



#
# WINDOWING
#
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

function setenv() { export "$1=$2"; }

#
# SSH: reconnect to our agent
#

{
    F=$HOME/.ssh/curr_agent.sh
    if  [ -r $F ]; then
        is=`grep PID $F | perl -ane 'print m@PID=(\d+)@ && kill(0,int $1)  ? $1 : 0' `
        if [ $is -gt  1 ]; then
            echo "reusing current agent at pid.$is"
        else
            ssh-agent > $F
            echo "stale agent, renewing; ssh-add to initialize"
         fi
        source $F;
    else
        ssh-agent -c  >  $F;
        echo "new agent; ssh-add to initialize"
        source $F;
    fi
}



test -r $HOME/.bash_alias     && source $HOME/.bash_alias
test -r $HOME/.bash_alias_ssh && source $HOME/.bash_alias_ssh
test -x $HOME/local/bashrc    && for i in $HOME/local/bashrc/enabled/*.sh; do source $i; done

# was part of dotfiles, new is using brew install `git bash-completion`
# source /usr/local/etc/bash_completion.d/git-completion.bash
# TESTING: export GITAWAREPROMPT=~/code/git-aware-prompt
export CLICOLOR=1
test -r $HOME/.git-completion.sh &&  source $HOME/.git-completion.sh
# test -r $HOME/.git-prompt.sh &&  source $HOME/.git-prompt.sh
# GIT_PS1_SHOWDIRTYSTATE=true
# export PS1='[\u@\h \w$(__git_ps1)]\$ '
#export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]$(__git_ps1)\$ "
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
